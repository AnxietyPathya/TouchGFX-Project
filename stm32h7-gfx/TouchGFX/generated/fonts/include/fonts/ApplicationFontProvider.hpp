/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
#define TOUCHGFX_APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId TYPOGRAPHY_00 = 0;
    static const touchgfx::FontId DEFAULT = 1;
    static const touchgfx::FontId LARGE = 2;
    static const touchgfx::FontId SETTINGRESULT = 3;
    static const touchgfx::FontId SETTINGBTN = 4;
    static const touchgfx::FontId SETTINGTARGET = 5;
    static const touchgfx::FontId SETUPFONT = 6;
    static const touchgfx::FontId SETUPVALUE = 7;
    static const touchgfx::FontId ETC_FONT = 8;
    static const touchgfx::FontId DISPLAY = 9;
    static const touchgfx::FontId MODE = 10;
    static const touchgfx::FontId KEYBOARD = 11;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId TYPOGRAPHY_00 = 0; // NanumBarunGothic_20_2bpp
    static const touchgfx::FontId DEFAULT = 1;       // verdana_18_2bpp
    static const touchgfx::FontId LARGE = 2;         // verdana_40_2bpp
    static const touchgfx::FontId SETTINGRESULT = 3; // verdana_30_2bpp
    static const touchgfx::FontId SETTINGBTN = 4;    // verdana_25_2bpp
    static const touchgfx::FontId SETTINGTARGET = 5; // NanumBarunGothic_17_2bpp
    static const touchgfx::FontId SETUPFONT = 6;     // malgun_18_2bpp
    static const touchgfx::FontId SETUPVALUE = 7;    // malgunbd_30_2bpp
    static const touchgfx::FontId ETC_FONT = 2;      // verdana_40_2bpp
    static const touchgfx::FontId DISPLAY = 8;       // NanumBarunGothic_38_2bpp
    static const touchgfx::FontId MODE = 9;          // NanumBarunGothic_26_2bpp
    static const touchgfx::FontId KEYBOARD = 10;      // NanumBarunGothic_30_2bpp
    static const uint16_t NUMBER_OF_FONTS = 11;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* /*flashReader*/)
    {
    }

    static touchgfx::FlashDataReader* getFlashReader()
    {
        return 0;
    }
};

#endif // TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
